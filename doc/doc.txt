doc.txt

================================================================================
CONTENTS                                                            *doc-contents*

1. neokinds ü•¥...............................................|doc-neokinds_ü•¥|
    1.1. ‚ö°Ô∏è Requirements.............................|doc-‚ö°Ô∏è_requirements|
    1.2. üç∫ Installation.................................|doc-üç∫_installation|
    1.3. ‚öôÔ∏è  Config.......................................|doc-‚öôÔ∏è__config|
        1.3.1. üé® integration.............................|doc-üé®_integration|
    1.4. üìÅ file icons.....................................|doc-üìÅ_file_icons|
        1.4.1. üå≥ NeoTree config.......................|doc-üå≥_neotree_config|
    1.5. üåê Compatibility...............................|doc-üåê_compatibility|
        1.5.1. üëè Acknowledgements...................|doc-üëè_acknowledgements|

================================================================================
NEOKINDS ü•¥                                                  *doc-neokinds_ü•¥*

ide-like pictograms for neovim lsp completion items, make your lsp icons much more attractive.

[](http://www.lua.org)
[](https://neovim.io)



--------------------------------------------------------------------------------
‚ö°Ô∏è REQUIREMENTS                                      *doc-‚ö°Ô∏è_requirements*

*   nerd fonts
*   neovim 0.10 +
>
    [!NOTE]
    This plugin would not be possible without nerd fonts, mini.icons and lspkind, their links are in the acknowledgements section.
    [TODO]
    Adding nvim-tree support
<

--------------------------------------------------------------------------------
üç∫ INSTALLATION                                          *doc-üç∫_installation*
>
    {
        "BrunoCiccarino/neokinds",
        config = function ()
            local neokinds = require("neokinds"), 
            neokinds.setup({
                ...
            }),
        end
    }
<

--------------------------------------------------------------------------------
‚öôÔ∏è  CONFIG                                                *doc-‚öôÔ∏è__config*
>
    local neokinds = require("neokinds")
    neokinds.setup({
        icons = {
            error = "ÔÅó",
            warn = "ÔÅ±",
            hint = "ÔÅ™",
            info = "ÔÅö",
        },
        completion_kinds = {
            Text = "Ôíû ",
            Method = "Û∞Üß",
            Function = "Û∞äï",
            Constructor = "Ôê£ ",
            Field = "Ó≠ü",
            Variable = "Óúñ ",
            Class = "Û∞†± ",
            Interface = "Ó≠° ",
            Module = "Ôíá ",
            Property = "Û∞ú¢ ",
            Unit = "Ôëµ ",
            Value = "Ô¢ü ",
            Enum = "Ô©ó",
            Keyword = "Û∞åã",
            Snippet = "Ôëè",
            Color = "Ô£ó ",
            File = "Ó≠† ",
            Reference = "Ôúú ",
            Folder = "Ó™É ",
            EnumMember = "ÔÖù ",
            Constant = "Ó≠ù ",
            Struct = "Ó™ë",
            Event = "ÔÉß ",
            Operator = "Ôöî ",
            TypeParameter = "ÔûÉ ",
            Boolean = "Ó™è ",
            Array = "Ó™ä ",
          },        
    })
<

üé® INTEGRATION                                            *doc-üé®_integration*
>
    <details>
    <summary> blink-cmp config</summary>
    ```lua
    local neokinds = require("neokinds")
    require('blink-cmp').setup({
        completion = {
            list = { selection = function(ctx) return ctx.mode == "cmdline" and "auto_insert" or "preselect" end },
            menu = {
                border = "rounded",
                winhighlight = "Normal:NormalFloat,FloatBorder:FloatBorder,CursorLine:PmenuSel,Search:None",
                draw = {
                    components = {
                        kind_icon = {
                            text = function(ctx)
                                
                                local icon = neokinds.config.completion_kinds[ctx.kind] or ""
                                return icon .. " " .. (ctx.kind or "")
                            end,
                            highlight = function(ctx)
                                
                                return "CmpItemKind" .. (ctx.kind or "Default")
                            end,
                        },
                    },
                },
            },
        },
    }
    ```
    </details>
<
>
    <details>
    <summary> cmp config</summary>
    ```lua
        local neokinds = require('neokinds') 
        formatting = {
            format = function(entry, vim_item)
          vim_item.menu = ({
            nvim_lsp = "[LSP]",
            luasnip = "[Snippet]",
            buffer = "[Buffer]",
            nvim_lua = "[API]",
            path = "[Path]",
            calc = "[Calc]",
            emoji = "[Emoji]",
          })[entry.source.name] or ""
            vim_item.kind = string.format("%s %s", M.config.completion_kinds[vim_item.kind] or "", vim_item.kind)
        return vim_item
        end,
      },
    ```
    </details>
<

--------------------------------------------------------------------------------
üìÅ FILE ICONS                                              *doc-üìÅ_file_icons*
>
    [!TIP]
    For file icons, we have few variants so far, but over time we will add more and more. So if you want a wide variety of file icons, go to mini.icons (https://github.com/echasnovski/mini.icons) as the situation there is excellent.
<

üå≥ NEOTREE CONFIG                                      *doc-üå≥_neotree_config*
>
    require("neo-tree").setup({
        close_if_last_window = false,
        popup_border_style = "rounded",
        enable_git_status = true,
        enable_diagnostics = true,
        default_component_configs = {
            icon = {
                folder_closed = neokinds.config.icons.folders.closed,
                folder_open = neokinds.config.icons.folders.open,
                folder_empty = neokinds.config.icons.folders.empty,
                default = neokinds.config.icons.files.default,
            },
        },
        filesystem = {
            filtered_items = {
                visible = true,
            },
            components = {
                icon = function(config, node, state)
                    return neokinds.icon(config, node, state)
                end,
            },
        })
<

--------------------------------------------------------------------------------
üåê COMPATIBILITY                                        *doc-üåê_compatibility*

*   nvim-cmp: full support
*   blink-cmp full support
*   neo-tree full support

üëè ACKNOWLEDGEMENTS                                  *doc-üëè_acknowledgements*

*   mini.icons (https://github.com/echasnovski/mini.icons)
*   lspkind.nvim (https://github.com/onsails/lspkind.nvim)
*   nvim web devicons (https://github.com/nvim-tree/nvim-web-devicons)
*   nerd-fonts (https://www.nerdfonts.com/)

